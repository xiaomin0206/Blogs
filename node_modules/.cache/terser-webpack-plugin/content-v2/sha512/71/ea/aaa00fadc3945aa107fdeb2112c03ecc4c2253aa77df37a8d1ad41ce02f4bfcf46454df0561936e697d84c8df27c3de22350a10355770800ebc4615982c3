{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{217:function(a,t,r){\"use strict\";r.r(t);var e=r(6),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"变量和遍历\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量和遍历\"}},[a._v(\"#\")]),a._v(\" 变量和遍历\")]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"var name='福布斯',years='2020'\\nconsole.log(`您好，今年是 ${ name } 发布 ${ years + 1} 周年`)\\nconsole.log('您好，今年是'+` ${ name } `+'发布'+` ${ years + 1} `+'周年')\\n\")])])]),r(\"h2\",{attrs:{id:\"for-of-允许你遍历-arrays-数组-strings-字符串-maps-映射-sets-集合-等可迭代的数据结构等\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#for-of-允许你遍历-arrays-数组-strings-字符串-maps-映射-sets-集合-等可迭代的数据结构等\"}},[a._v(\"#\")]),a._v(\" for...of 允许你遍历 Arrays（数组）, Strings（字符串）, Maps（映射）, Sets（集合）等可迭代的数据结构等\")]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v('let someArray = [1, \"string\", false];\\n \\nfor (let entry of someArray) {\\n    console.log(entry); // 1, \"string\", false\\n}\\n')])])]),r(\"h2\",{attrs:{id:\"for-in-数组-对象\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#for-in-数组-对象\"}},[a._v(\"#\")]),a._v(\" for...in(数组,对象)\")]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"\\n\\nvar arr=[{name:'张三'},{name:'李四'}];\\nvar obj={name:'张三'};\\nfor (var i in arr){\\n\\tconsole.log(i)\\n}\\nfor (var i in obj){\\n\\tconsole.log(i)\\n}\\n\\nfor (var i of arr){\\n\\tconsole.log(i)\\n}\\n///////////0  1  name  {name:'张三'}  {name:'李四'}\\n\")])])]),r(\"h2\",{attrs:{id:\"foreach\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#foreach\"}},[a._v(\"#\")]),a._v(\" forEach\")]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"let list = [4, 5, 6];\\nlist.forEach((val, idx, array) => {\\n    // val: 当前值\\n    // idx：当前index\\n    // array: Array\\n});\\n\")])])]),r(\"p\",[r(\"strong\",[a._v(\"1. forEach() 用于遍历数组无返回值，会改变原来数组中的值\")])]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"let arr = [1, 3, 12, 2, 20, -1, 6, 17];\\narr.forEach((item, index, array) => {\\n    array[index] = item * 2;\\n});\\nconsole.log(arr);\\t\\t\\t\\t\\t//\\t[2, 6, 24, 4, 40, -2, 12, 34]\\n\")])])]),r(\"p\",[r(\"strong\",[a._v(\"2. map() 用于遍历数组，返回处理之后的新数组\")])]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"const arr = [1, 3, 12, 2, 20, -1, 6, 17];\\nconst newArr = arr.map((item, index, array) => item * 2);\\nconsole.log(arr);\\t\\t\\t\\t\\t//\\t[1, 3, 12, 2, 20, -1, 6, 17]\\nconsole.log(newArr);\\t\\t\\t\\t\\t//\\t[2, 6, 24, 4, 40, -2, 12, 34]\\n\")])])]),r(\"p\",[r(\"strong\",[a._v(\"3. filter() 用于筛选数组中满足条件的元素，返回一个筛选后的新数组\")])]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"const arr = [1, 3, 12, 2, 20, -1, 6, 17];\\nconst newArr = arr.filter((item, index, array) => item < 5);\\nconsole.log(arr);\\t\\t\\t\\t\\t//\\t[1, 3, 12, 2, 20, -1, 6, 17]\\nconsole.log(newArr);\\t\\t\\t\\t\\t//\\t[1, 3, 2, -1]\\n\")])])]),r(\"p\",[r(\"strong\",[a._v(\"4. every() 用于判断数组中的每一项元素是否都满足条件，返回一个布尔值\")])]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"const arr = [1, 3, 12, 2, 20, -1, 6, 17];\\nconst bool = arr.every((item, index, array) => item < 12);\\nconsole.log(bool);\\t\\t\\t\\t\\t//\\tfalse\\n\")])])]),r(\"p\",[r(\"strong\",[a._v(\"5. some() 用于判断数组中是否存在满足条件的元素，返回一个布尔值\")])]),a._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[a._v(\"const arr = [1, 3, 12, 2, 20, -1, 6, 17];\\nconst bool = arr.some((item, index, array) => item < 12);\\nconsole.log(bool);\\t\\t\\t\\t\\t//\\ttrue\\n\")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}